@model  ECommerceProject.DAL.Models.Contents

@{
    ViewBag.Title = "Ürün Düzenleme";
}

@using (Html.BeginForm("EditProduct", "Content", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ürün</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(z => z.ID)
        <div class="form-group">
            @Html.LabelFor(z => z.Code, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(z => z.Code, new { @class = "form-control", placeholder = "Ürün Başlığı" })
                @Html.ValidationMessageFor(z => z.Code)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(z => z.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(z => z.Title, new { @class = "form-control", placeholder = "Ürün Başlığı" })
                @Html.ValidationMessageFor(z => z.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(z => z.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(z => z.Price, new { @class = "form-control", placeholder = "Fiyat ₺" })
                @Html.ValidationMessageFor(z => z.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(z => z.Stock, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(z => z.Stock, new { @class = "form-control", placeholder = "Stok Adedi" })
                @Html.ValidationMessageFor(z => z.Stock)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(z => z.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                @Html.ValidationMessageFor(z => z.Image)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(z => z.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(z => z.Description, new { @class = "form-control", placeholder = "Ürün Açıklaması" })
                @Html.ValidationMessageFor(z => z.Description)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Kaydet" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>

<script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Sadece '.jpeg','.jpg', '.png', '.gif', '.bmp' formattaki dosyalar geçerlidir.");
        }
    }
</script>